rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /blogs/{newBlogId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
    match /founders/{newFounderId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
     match /events/{newFounderId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
    match /news/{newNewsId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
    match /users/{newUserPhoto} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    match /{Location}/{newUserPhoto} {
      allow read: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
      allow write: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
    match /peopleIds/{newUserPhoto} {
      allow read: if true;
      allow create: if request.resource.size < 3 * 1024 * 1024;
      allow delete: if request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
    match /files/{Location}/{newUserPhoto} {
      allow read: if true;
      allow write: if request.resource.size < 3 * 1024 * 1024 && request.auth != null && (request.auth.token.admin == true || request.auth.token.editor == true);
    }
  }
}
